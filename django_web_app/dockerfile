
# # FROM --platform=$BUILDPLATFORM python:3.7-alpine AS builder
# # EXPOSE 8000
# # WORKDIR /app 
# # COPY requirements.txt /app
# # RUN pip3 install -r requirements.txt --no-cache-dir
# # COPY . /app 
# # ENTRYPOINT ["python3"] 
# # CMD ["manage.py", "runserver", "0.0.0.0:8000"]
# # FROM python:3.10

# # WORKDIR /app

# # COPY requirements.txt /app
# # RUN pip3 install -r requirements.txt --no-cache-dir

# # # COPY . .
# # COPY . /app 
# # ENTRYPOINT ["python3"] 

# # EXPOSE 8000

# # # CMD ["python", "manage.py", "collectstatic", "--noinput"]
# # CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]

# # this:

# FROM python:3.9

# ENV PYTHONUNBUFFERED 1
# ENV DEBIAN_FRONTEND noninteractive

# WORKDIR /app

# COPY requirements.txt /app
# RUN pip install --no-cache-dir -r requirements.txt

# # COPY manage.py /app/
# COPY . /app

# EXPOSE 5000

# # CMD ["python", "manage.py", "collectstatic", "--noinput"]
# CMD ["python", "manage.py", "runserver", "0.0.0.0:5000"]



# Use an official Python runtime as a parent image
FROM python:3.9

# Set environment variables for non-interactive mode
ENV PYTHONUNBUFFERED 1
ENV DEBIAN_FRONTEND noninteractive

# Set the working directory in the container
WORKDIR /app

# Copy the requirements file into the container
COPY requirements.txt ./

# Install any needed packages specified in requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of your application code into the container
COPY . /app/
# VOLUME /app/data

# Expose the port on which your application will run
EXPOSE 5000

# VOLUME /app/data

# Define the command to run your application
CMD ["python", "manage.py", "runserver", "0.0.0.0:5000"]
